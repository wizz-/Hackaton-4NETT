apiVersion: v1
kind: Namespace
metadata:
  name: healthmed

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlserver-pvc
  namespace: healthmed
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: Service
metadata:
  name: sqlserver
  namespace: healthmed
spec:
  type: NodePort
  selector:
    app: sqlserver
  ports:
    - port: 1433
      targetPort: 1433
      nodePort: 31433

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
  namespace: healthmed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
        - name: sqlserver
          image: mcr.microsoft.com/mssql/server:2022-latest
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: "YourStrong!Passw0rd"
          volumeMounts:
            - mountPath: /var/opt/mssql
              name: mssql-data
      volumes:
        - name: mssql-data
          persistentVolumeClaim:
            claimName: sqlserver-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: healthmed
spec:
  type: NodePort
  selector:
    app: api
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30880

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: healthmed
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: healthmed-api
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ConnectionStrings__DefaultConnection
              value: "Server=sqlserver;Database=HealthMed;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True"

---

apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: healthmed
spec:
  type: NodePort
  selector:
    app: web
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30881

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: healthmed
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: healthmed-web
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: healthmed
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]

      - job_name: "api"
        static_configs:
          - targets: ["api:80"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: healthmed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
        ports:
        - containerPort: 9090
        volumeMounts:
          - name: prometheus-config-volume
            mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: healthmed
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 31197
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: healthmed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: healthmed
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 31824
  type: NodePort
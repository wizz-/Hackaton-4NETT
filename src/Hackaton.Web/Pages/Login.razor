@page "/login"
@layout BlankLayout

@using Hackaton.Web.Auth.Interfaces
@using Hackaton.Web.Models

@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Login - Health&Med</PageTitle>

<div class="text-center mb-4">
    <img src="img/logo-100.png" alt="Health&Med" class="logo">
</div>

<ul class="nav nav-tabs mb-3" id="loginTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link @(loginModel.Perfil == PerfisDeUsuario.Medico ? "active" : "")"
                type="button" @onclick="() => SelecionarPerfil(PerfisDeUsuario.Medico)">
            Médico
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link @(loginModel.Perfil == PerfisDeUsuario.Paciente ? "active" : "")"
                type="button" @onclick="() => SelecionarPerfil(PerfisDeUsuario.Paciente)">
            Paciente
        </button>
    </li>
</ul>

<div class="tab-content">
    <div class="tab-pane fade show active">
        <form @onsubmit="HandleLogin">
            @if (loginModel.Perfil == PerfisDeUsuario.Medico)
            {
                <div class="row mb-3">
                    <div class="col-md-8">
                        <label for="crm" class="form-label">CRM</label>
                        <input type="text" class="form-control" id="crm" @bind="loginModel.CRM" placeholder="Digite seu CRM" required>
                    </div>
                    <div class="col-md-4">
                        <label for="uf" class="form-label">UF</label>
                        <select class="form-select" id="uf" @bind="loginModel.UF" required>
                            <option value="">Selecione o estado</option>
                            @foreach (var uf in Estados)
                            {
                                <option value="@uf">@uf</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="mb-3">
                    <label for="cpf-email" class="form-label">CPF ou Email</label>
                    <input type="text" class="form-control" id="cpf-email" @bind="loginModel.EmailOuCPF" placeholder="Digite seu CPF ou Email" required>
                </div>
            }

            <div class="mb-3">
                <label for="senha" class="form-label">Senha</label>
                <input type="password" class="form-control" id="senha" @bind="loginModel.Senha" placeholder="Digite sua senha" required>
            </div>

            <button type="submit" class="btn btn-primary w-100">
                Entrar como @(loginModel.Perfil == PerfisDeUsuario.Medico ? "Médico" : "Paciente")
            </button>

            @if (!string.IsNullOrEmpty(mensagemErro))
            {
                <div class="alert alert-danger text-center py-2 px-3 mt-3 mb-3" role="alert">
                    @mensagemErro
                </div>
            }
        </form>
    </div>
</div>

<div class="text-center mt-3">
    <a href="/cadastro" class="text-decoration-none">Primeiro acesso? Clique aqui</a>
</div>

@code {
    private LoginModel loginModel = new LoginModel { Perfil = PerfisDeUsuario.Medico };
    private string mensagemErro = "";

    private readonly List<string> Estados = new()
    {
        "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA",
        "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN",
        "RS", "RO", "RR", "SC", "SP", "SE", "TO"
    };

    private void SelecionarPerfil(PerfisDeUsuario perfil)
    {
        loginModel = new LoginModel
            {
                Perfil = perfil
            };
        mensagemErro = string.Empty;
    }

    private async Task HandleLogin()
    {
        mensagemErro = "";

        bool sucesso = await AuthService.LoginAsync(loginModel);

        if (sucesso)
        {
            Navigation.NavigateTo(loginModel.Perfil == PerfisDeUsuario.Medico ? "/medico" : "/paciente");
        }
        else
        {
            mensagemErro = "Usuário ou senha inválidos!";
        }
    }
}
